<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="3" passed="1">
  <reporter-output>
    <line>
      <![CDATA[testN_GReportsANDLogs-> this runs once before class]]>
    </line>
    <line>
      <![CDATA[testN_GReportsANDLogs-> this runs testmethod2]]>
    </line>
    <line>
      <![CDATA[testN_GReportsANDLogs-> this runs testmethod1]]>
    </line>
  </reporter-output>
  <suite name="Regression_suite" duration-ms="43" started-at="2018-12-20T10:11:00Z" finished-at="2018-12-20T10:11:00Z">
    <groups>
    </groups>
    <test name="Application_test" duration-ms="43" started-at="2018-12-20T10:11:00Z" finished-at="2018-12-20T10:11:00Z">
      <class name="testNGandReporter.TestNG_ReportsANDLogs">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225]" name="setUp" is-config="true" duration-ms="9" started-at="2018-12-20T10:11:00Z" finished-at="2018-12-20T10:11:00Z">
          <reporter-output>
            <line>
              <![CDATA[testN_GReportsANDLogs-> this runs once before class]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testMethod2()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225]" name="testMethod2" duration-ms="7" started-at="2018-12-20T10:11:00Z" finished-at="2018-12-20T10:11:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testNGandReporter.TestNG_ReportsANDLogs.testMethod2(TestNG_ReportsANDLogs.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[testN_GReportsANDLogs-> this runs testmethod2]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-12-20T10:11:00Z" finished-at="2018-12-20T10:11:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-12-20T10:11:00Z" finished-at="2018-12-20T10:11:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-12-20T10:11:00Z" finished-at="2018-12-20T10:11:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testMethod1()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225]" name="testMethod1" duration-ms="2" started-at="2018-12-20T10:11:00Z" finished-at="2018-12-20T10:11:00Z">
          <reporter-output>
            <line>
              <![CDATA[testN_GReportsANDLogs-> this runs testmethod1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-12-20T10:11:00Z" finished-at="2018-12-20T10:11:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="testMethod3()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225]" name="testMethod3" duration-ms="0" started-at="2018-12-20T10:11:00Z" depends-on-methods="testNGandReporter.TestNG_ReportsANDLogs.testMethod2" finished-at="2018-12-20T10:11:00Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNG_ReportsANDLogs.testMethod3()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNG_ReportsANDLogs.testMethod3()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testNGandReporter.TestNG_ReportsANDLogs@60285225]" name="cleanUp" is-config="true" duration-ms="0" started-at="2018-12-20T10:11:00Z" finished-at="2018-12-20T10:11:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testNGandReporter.TestNG_ReportsANDLogs -->
    </test> <!-- Application_test -->
  </suite> <!-- Regression_suite -->
</testng-results>
